import { useConsultation } from '@/contexts/ConsultationContext';
import { motion } from 'framer-motion';
import Image from 'next/image';

export default function SolutionsSection() {
  const { openConsultation } = useConsultation();
  const solutions = [
    {
      title: 'AI Chatbot Th√¥ng Minh',
      highlighted: 'Th√¥ng Minh',
      description:
        'AI AGENT c√≥ kh·∫£ nƒÉng t∆∞ v·∫•n s·∫£n ph·∫©m, ch·ªët ƒë∆°n, t·∫°o b√°o c√°o... ph√π h·ª£p v·ªõi nhi·ªÅu ng√†nh h√†ng: th·ªùi trang, F&B, gi√°o d·ª•c, du l·ªãch.',
      features: [
        'Ch·ªß shop t·∫°o chatbot d·ªÖ d√†ng trong v√†i ph√∫t',
        'AI Agent tu·ª≥ ch·ªânh theo ng√†nh h√†ng: h·ªó tr·ª£ v√† t·ª± ƒë·ªông ho√° nghi·ªáp v·ª• sales, chƒÉm s√≥c kh√°ch h√†ng, b√°o c√°o‚Ä¶ nh∆∞ m·ªôt NH√ÇN VI√äN ·∫£o t√≠ch h·ª£p ƒëa n·ªÅn t·∫£ng.',
        'Training AI b·∫±ng c√°ch nh·∫≠p ki·∫øn th·ª©c s·∫£n ph·∫©m',
      ],
      imagePosition: 'left',
      urlImage: '/images/solution-img-1',
    },
    {
      title: 'AI Qu·∫£n l√Ω Marketing & Fanpage',
      highlighted: 'Marketing & Fanpage',
      description:
        'T·∫°o content SEO, qu·∫£ng c√°o, minigame. T·ª± ƒë·ªông ph·∫£n h·ªìi inbox/comment theo tone th∆∞∆°ng hi·ªáu, g·ª£i √Ω content theo m√πa v·ª• v√† h√†nh vi kh√°ch h√†ng.',
      features: [
        'Ph·∫£n h·ªìi b√¨nh lu·∫≠n/inbox c√≥ c·∫£m x√∫c theo tone th∆∞∆°ng hi·ªáu',
        'T·ª± vi·∫øt b√†i chu·∫©n SEO, l√™n l·ªãch ƒëƒÉng, t·∫°o minigame',
        'G·ª£i √Ω k·∫ø ho·∫°ch content theo m√πa v·ª•, insight kh√°ch h√†ng',
      ],
      icon: 'üì±',
      bgColor: 'bg-orange-50',
      borderColor: 'border-orange-200',
      imagePosition: 'right',
      urlImage: '/images/solution-img-2',
    },
    {
      title: 'AI cho Gi√°o d·ª•c',
      highlighted: 'Gi√°o d·ª•c',
      description:
        'Ph√¢n t√≠ch b√†i gi·∫£ng, t·∫°o slide, quiz, chatbot h·ªçc t·∫≠p. T·ª± ƒëƒÉng l√™n h·ªá th·ªëng LMS, gi·∫£m 50% th·ªùi gian h·ªçc t·∫≠p v√† qu·∫£n l√Ω n·ªôi dung.',
      features: [
        'T·ª± chuy·ªÉn video b√†i gi·∫£ng th√†nh kh√≥a h·ªçc ho√†n ch·ªânh',
        'T·∫°o slide, quiz, chatbot h·ªçc t·∫≠p c√° nh√¢n h√≥a',
        'T·ª± ƒëƒÉng l√™n LMS v√† b·∫£n khoa h·ªçc ƒë·ªÉ ƒëƒÉng',
      ],
      icon: 'üéì',
      bgColor: 'bg-green-50',
      borderColor: 'border-green-200',
      imagePosition: 'left',
      urlImage: '/images/solution-img-3',
    },
    {
      title: 'AI Ph√¢n t√≠ch Qu·∫£ng c√°o cho Agency',
      highlighted: 'Qu·∫£ng c√°o cho Agency',
      description:
        'K·∫øt n·ªëi t√†i kho·∫£n qu·∫£ng c√°o, ƒë√°nh gi√° hi·ªáu qu·∫£, ƒë·ªÅ xu·∫•t ng√¢n s√°ch v√† content ph√π h·ª£p. T·ª± xu·∫•t b√°o c√°o ƒë·ªãnh k·ª≥ theo format Agency chuy√™n nghi·ªáp.',
      features: [
        'K·∫øt n·ªëi t√†i kho·∫£n qu·∫£ng c√°o, ph√¢n t√≠ch hi·ªáu su·∫•t t·ª± ƒë·ªông',
        'G·ª£i √Ω lo·∫°i b√†i n√™n d√πng, ƒëi·ªÅu ch·ªânh ng√¢n s√°ch th√¥ng minh',
        'Xu·∫•t b√°o c√°o ƒë·ªãnh k·ª≥ d∆∞·ªõi nhi·ªÅu ƒë·ªãnh d·∫°ng (PDF, Slide...)',
      ],
      icon: 'üìä',
      bgColor: 'bg-purple-50',
      borderColor: 'border-purple-200',
      imagePosition: 'right',
      urlImage: '/images/solution-img-4',
    },
    {
      title: 'AI cho Qu·∫£n tr·ªã Doanh nghi·ªáp',
      highlighted: 'Qu·∫£n tr·ªã Doanh nghi·ªáp',
      description:
        'T·∫°o th∆∞ vi·ªán h·ªèi ƒë√°p t·ª´ SOP v√† ch√≠nh s√°ch c√¥ng ty. Giao vi·ªác b·∫±ng chat, theo d√µi ti·∫øn ƒë·ªô, gi√∫p ti·∫øt ki·ªám th·ªùi gian v·∫≠n h√†nh v√† nh√¢n l·ª±c h√†nh ch√≠nh.',
      features: [
        'T·∫°o th∆∞ vi·ªán h·ªèi ƒë√°p n·ªôi b·ªô t·ª´ file t√†i li·ªáu, ch√≠nh s√°ch',
        'Giao vi·ªác, theo d√µi ti·∫øn ƒë·ªô, truy v·∫•n t√†i li·ªáu b·∫±ng chat',
        'T·ªëi ∆∞u th·ªùi gian v√† chi ph√≠ v·∫≠n h√†nh h√†nh ch√≠nh',
      ],
      icon: 'üè¢',
      bgColor: 'bg-indigo-50',
      borderColor: 'border-indigo-200',
      imagePosition: 'left',
      urlImage: '/images/solution-img-5',
    },
  ];

  return (
    <section
      id="solutions"
      className="py-20 bg-gradient-to-b from-blue-50 to-white max-w-screen overflow-hidden"
    >
      <div className="max-w-7xl mx-auto px-6">
        {/* Header */}
        <motion.div
          initial={{ opacity: 0, y: 30 }}
          whileInView={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.8 }}
          viewport={{ once: true }}
          className="text-center mb-20 pb-10"
        >
          <h2
            className="text-5xl pt-28 md:text-6xl font-bold mb-8 
              bg-gradient-to-r from-[#13B34E] to-[#1677FF] bg-clip-text text-transparent"
          >
            Gi·∫£i ph√°p n·ªïi b·∫≠t
          </h2>

          <p className="text-xl text-gray-700 max-w-5xl mx-auto leading-relaxed mb-10">
            C√°c s·∫£n ph·∫©m AI ƒëa d·∫°ng c·ªßa ch√∫ng t√¥i bao g·ªìm: AI Agent chatbot, AI
            qu·∫£n l√Ω fanpage, AI h·ªó tr·ª£ t·∫°o n·ªôi dung, AI ph√¢n t√≠ch qu·∫£ng c√°o v√†
            qu·∫£n tr·ªã n·ªôi b·ªô... D·ªÖ d√†ng tri·ªÉn khai, ·ª©ng d·ª•ng v√† t·∫°o workflow ch·ªâ
            v·ªõi m·ªôt click.
          </p>
        </motion.div>
        <div className="mb-32"></div>
        {/* Individual Solution Sections */}
        {solutions.map((solution, index) => (
          <motion.div
            key={index}
            initial={{ opacity: 0, y: 50 }}
            whileInView={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.8, delay: index * 0.2 }}
            viewport={{ once: true }}
            className={`mb-32 ${index % 2 === 0 ? 'lg:mb-40' : 'lg:mb-40'}`}
          >
            <div
              className={`grid grid-cols-1 lg:grid-cols-2 gap-16 items-center ${
                solution.imagePosition === 'right'
                  ? 'lg:grid-flow-col-dense'
                  : ''
              }`}
            >
              {/* Content */}
              <div
                className={`space-y-8 ${
                  solution.imagePosition === 'right' ? 'lg:col-start-2' : ''
                }`}
              >
                <div>
                  <h3 className="text-4xl md:text-5xl font-bold mb-6">
                    {solution.title.split(solution.highlighted)[0]}
                    <span className="bg-gradient-to-r from-[#FF9616] to-[#1677FF] bg-clip-text text-transparent">
                      {solution.highlighted}
                    </span>
                    {solution.title.split(solution.highlighted)[1]}
                  </h3>
                  <p className="text-xl text-gray-700 leading-relaxed">
                    {solution.description}
                  </p>
                </div>

                <div className="space-y-6">
                  {solution.features.map((feature, featureIndex) => (
                    <motion.div
                      key={featureIndex}
                      initial={{ opacity: 0, x: -20 }}
                      whileInView={{ opacity: 1, x: 0 }}
                      transition={{ duration: 0.6, delay: featureIndex * 0.1 }}
                      viewport={{ once: true }}
                      className="flex items-start space-x-4"
                    >
                      <div className="w-6 h-6 bg-blue-500 rounded-full flex items-center justify-center flex-shrink-0 mt-1">
                        <svg
                          className="w-4 h-4 text-white"
                          fill="currentColor"
                          viewBox="0 0 20 20"
                        >
                          <path
                            fillRule="evenodd"
                            d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z"
                            clipRule="evenodd"
                          />
                        </svg>
                      </div>
                      <span className="text-lg text-gray-700 leading-relaxed">
                        {feature}
                      </span>
                    </motion.div>
                  ))}
                </div>
              </div>

              {/* Visual */}
              <div
                className={`${
                  solution.imagePosition === 'right' ? 'lg:col-start-1' : ''
                }`}
              >
                <motion.div
                  initial={{ opacity: 0, scale: 0.98, y: 16 }}
                  whileInView={{ opacity: 1, scale: 1, y: 0 }}
                  viewport={{ once: true }}
                  transition={{ duration: 0.6, ease: 'easeOut' }}
                  whileHover={{ scale: 1.01 }}
                  className="relative"
                >
                  <SolutionStillImage src={`${solution.urlImage}.png`} />
                </motion.div>
              </div>
            </div>
          </motion.div>
        ))}
      </div>
    </section>
  );
}

function SolutionStillImage({ src }: { src: string }) {
  return (
    <div className="relative rounded-3xl border border-gray-100 bg-gradient-to-br from-sky-50 to-white shadow-[0_40px_80px_-30px_rgba(0,0,0,0.25)]">
      {/* Ambient background blob for depth */}
      <div className="pointer-events-none absolute -top-10 -left-6 h-40 w-40 rounded-full bg-sky-100 blur-3xl opacity-60" />
      <div className="pointer-events-none absolute -bottom-8 -right-8 h-44 w-44 rounded-full bg-blue-100 blur-3xl opacity-60" />

      {/* Image frame */}
      <div className="relative h-64 sm:h-72 md:h-96 lg:h-[28rem] flex items-center justify-center p-4 md:p-6">
        <Image
          src={src}
          alt="solution preview"
          className="max-h-full w-auto object-contain drop-shadow-xl"
          height={400}
          width={400}
        />
      </div>
    </div>
  );
}
